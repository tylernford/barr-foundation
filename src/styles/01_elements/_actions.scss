/* _actions.scss */
@use "../utils/_utils" as *;

/* ---------------------------------------------------------------------
  Element: Action
  See templates/_macros/01_elements/_actions.twig for markup

  Variants: Button, Link
------------------------------------------------------------------------ */

.action {
    /* ---------------------------------------------------------------------
    Button & Link Shared Styles
    ------------------------------------------------------------------------ */
    --color-action-primary: var(--color-primary-teal-150);
    --color-action-primary-reversed: var(--color-primary-teal-25);
    --color-action-label: var(--color-tertiary-grey-25);
    --color-action-label-reversed: var(--color-tertiary-grey-200);
    --color-action-hover: var(--color-tertiary-grey-200);
    --transition-action-in: all var(--transition) ease-out;
    --transition-action-in--intermediate: all var(--transition-intermediate) ease-out;
    --transition-action-out: all var(--transition) ease-in;
    --transition-action-out--intermediate: all var(--transition-intermediate) ease-in;

    flex-shrink: 0;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    border: 0;
    @include getType('action');
    cursor: pointer;

    .action__icon {
        margin-left: 0.5rem; // 8px
        width: var(--icon-size);
        height: var(--icon-size);
        flex-shrink: 0;
    }

    // Icon only
    &[data-icon-only=true] {
        .action__text {
            @include totallyHide;
        }

        .action__icon {
            margin-left: 0;
        }
    }


    /* ---------------------------------------------------------------------
    Button
    ------------------------------------------------------------------------ */
    &--button {
        border-radius: var(--radius-action);
        transition: var(--transition-action-out);
        
        // With text
        &:not([data-icon-only=true]) {
            padding: var(--base-3) var(--base-6); // 15px 30px

            .action__icon {
                margin-top: -2px;
            }
        }

        // Icon only
        &[data-icon-only=true] {
            padding: var(--base-3); // 15px
            
            .action__text {
                @include totallyHide;
            }
        }

        // Colors
        &[data-is-reversed="false"] {
            background-color: var(--color-action-primary);
            color: var(--color-action-label);
        }

        &[data-is-reversed="true"] {
            background-color: var(--color-action-primary-reversed);
            color: var(--color-action-label-reversed);
        }

        // Hover
        @media (hover: hover){
            &:hover {
                box-shadow: var(--shadow-action);
                border-radius: var(--radius-action-s);
                background-color: var(--color-action-hover);
                color: var(--color-action-label);
                transition: var(--transition-action-in--intermediate);
            }
        }

        // Focus
        &:focus-visible {
            outline: var(--outline-width) solid var(--color-focus);
            outline-offset: var(--outline-offset);
            border-radius: var(--radius-action-s);
            background-color: var(--color-action-hover);
            color: var(--color-action-label);
            transition: var(--transition-action-in--intermediate);
        }
    }


    /* ---------------------------------------------------------------------
    Link
    ------------------------------------------------------------------------ */
    &--link {
        padding: var(--base-2) 0; // 10px 0
        position: relative;
        transition: var(--transition-action-out);

        > * {
            position: relative;
        }

        &::before {
            content: '';
            position: absolute;
            box-shadow: var(--shadow-action);
            border-radius: var(--radius-action-s);
            background-color: var(--color-action-hover);
            opacity: 0;
            transition: var(--transition-action-out);
        }

        // With text
        &:not([data-icon-only=true]) {
            &::before {
                inset: 0 -.5rem; // -8px
            }

            &::after {
                content: '';
                inset: auto 0 0 0;
                height: 1px;
                position: absolute;
                background-color: var(--color-action-hover);
                transition: var(--transition-action-out);
            }

            .action__icon {
                margin-top: -2px;
            }
        }

        // With text
        &[data-icon-only=true] {
            &::before {
                inset: 0 var(--neg-base-2); // 0 -10px
            }
        }

        // Colors
        &[data-is-reversed="false"] {
            color: var(--color-action-primary);

            &::after {
                background-color: var(--color-action-primary);
            }
        }

        &[data-is-reversed="true"] {
            color: var(--color-action-primary-reversed);

            &::after {
                background-color: var(--color-action-primary-reversed);
            }
        }

        @media (hover: hover){
            &:hover {
                color: var(--color-action-label);
                transition: var(--transition-action-out--intermediate);

                &::before {
                    opacity: 1;
                    transition: var(--transition-action-in--intermediate);
                }

                &::after {
                    background-color: var(--color-action-hover);
                    transition: var(--transition-action-in);
                }
            }
        }

        &:focus-visible {
            color: var(--color-action-label);
            outline: 0;
            transition: var(--transition-action-out--intermediate);
            
            &::before {
                opacity: 1;
                outline: var(--outline-width) solid var(--color-focus);
                outline-offset: var(--outline-offset);
                transition: var(--transition-action-in--intermediate);
            }

            &::after {
                background-color: var(--color-action-hover);
                transition: var(--transition-action-in);
            }
        }
    }
}