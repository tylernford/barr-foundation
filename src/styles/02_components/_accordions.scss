/* _accordions.scss */
@use "../utils/_utils" as *;
@use "sass:math";
@use "sass:meta";

/* ---------------------------------------------------------------------
  Accordion: Structure
  See templates/macros/_accordions.html for markup
------------------------------------------------------------------------ */
@mixin accordion($selector,$default: true,$colors...) {
    // customize as needed
    $border-size: 1px;
    $icon-size: 30px;

    #{$selector} {
        margin: 0;
        padding: 0;
        font-size: 1rem;

        &-title {
            margin: 0;
            padding: 0;
        }

        &-article {
            border: $border-size solid transparent;
            // enable smooth open
            overflow: hidden;
        }

        &-trigger {
            @include resetNativeButton;
            @include flexParent(flex,row nowrap);
            @include alignItems(center);
            padding: 0;
            margin: 0;
            width: 100%;
            background: none;
            font-size: 1rem;
            text-align: left;

            &::-moz-focus-inner {
                border: 0;
            }

            &:focus {

            }

            > * {
                @include flexChild(0 1 auto);
            }

            &[aria-expanded="true"] {
                #{$selector}-toggle--expand {
                    @include totallyHide;
                }
            }

            &[aria-expanded="false"] {
                #{$selector}-toggle--contract {
                    @include totallyHide;
                }
            }

        }

        &-name,
        &-icon {
            pointer-events: none;
        }

        &-name {
            display: block;
            outline: none;
        }

        &-icon {
            @include justifyContent(flex-end);
        }

        &-toggle {
            height: $icon-size;
            width: $icon-size;
            display: block;
            padding: 6px;
        }

        // max-heights for smooth slides
        &-panel {
            $max-height-sm: 1500px;
            $max-height-md: 1000px;
            $max-height-lg: 800px;

            max-height: $max-height-sm;
            opacity: 1;

            @include breakpoint(md) {
                max-height: $max-height-md;
            }

            @include breakpoint(lg) {
                max-height: $max-height-lg;
            }

            &[hidden] {
                display: none;
            }

            &._is-sliding {
                max-height: 0;
                opacity: 0;
            }

            @media ( prefers-reduced-motion: no-preference ) {
                transition: all 0.8s ease-in-out;

                &._is-sliding {
                    transition: all 0.5s ease-in-out;
                }
            
            }


        }

    }

    @if $default != false {
		@include accordion--default($selector,$colors...);
	}

}

/* -------------------------------------------------------------------------------
 Accordion: Default Presentation
---------------------------------------------------------------------------------- */
@mixin accordion--default($selector,$colors...) {

    $color-focus: hsl(216, 94%, 94%);

    $color-count: length($colors);
    // Define additional colors as needed
    $color-primary: if($color-count >= 1,nth($colors,1),null);
    $color-secondary: if($color-count >= 2,nth($colors,2),null);
    $color-tertiary: if($color-count >= 3,nth($colors,3),null);

	#{$selector} {
        // default styles go here
    }

}

/* -------------------------------------------------------------------------------
 Accordion: Firestarter Presentation
---------------------------------------------------------------------------------- */
@mixin accordion--firestarter($selector,$colors...) {

    $color-focus: hsl(216, 94%, 94%);

    $color-count: length($colors);
    // Define additional colors as needed
    $color-primary: if($color-count >= 1,nth($colors,1),null);
    $color-secondary: if($color-count >= 2,nth($colors,2),null);
    $color-tertiary: if($color-count >= 3,nth($colors,3),null);

	#{$selector} {
        width: 50%;

        &-article {
            border-color: $color-primary;
            padding: 2em;

            &:not(:last-of-type) {
                border-bottom: none;
            }
        }

        &-trigger {
            color: $color-primary;
            @include getType('fs-h4-lg');

            &:focus {
                background: $color-focus;
            }
        }

        &-toggle {
            fill: $color-primary;
        }

        &-content {
            color: $color-secondary;
            @include getType('fs-p1');
            padding: 1em;
        }

    }

}
