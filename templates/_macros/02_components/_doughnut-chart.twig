{# =======================================
  Macro: Doughnut Chart Component
==========================================
  Params:
    - chart (required)
======================================= #}

{% macro chart(chart) %}
  {% import '_macros/01_elements/_actions' as actions %}

  {% set title       = chart.title %}
  {% set measurement = chart.textPlainHeading %}
  {% set description = chart.textRichLink %}
  {% set cta         = chart.actionLink %}
  {% set slices      = chart.doughnutChartSlices %}

  <div class="doughnut-chart">
    {# View #}
    <div class="doughnut-chart__view">
      {# Figure #}
      <div class="doughnut-chart__figure">
        <div class="figure__inner">
        </div>
      </div>

      {# Description #}
      <div class="doughnut-chart__description">
        {# Title #}
        <h2 class="description__title">{{ title }}</h2>

        <div class="description__panels">
          {# Overview #}
          <div class="description__panel" data-is-active="true">
            <div class="panel__inner">
              {# Measurement #}
              <h3 class="panel__label">{{ measurement }}</h3>

              {# Description #}
              <div class="panel__copy">
                {{ description }}
              </div>

              {# CTA #}
            </div>
          </div>

          {# Panels #}
          {% for panel in slices %}
            {% set label  = panel.label %}
            {% set amount = panel.displayAmount %}
            {% set copy   = panel.description %}
            {% set cta    = panel.cta %}

            <div class="description__panel" data-slice="{{ label|kebab }}">
              <div class="panel__inner">
                {# Label #}
                <h3 class="panel__label">{{ label }}</h3>

                {# Amount #}
                {% if amount|length %}
                  <h4 class="panel__amount">{{ amount }}</h4>
                {% endif %}

                {# Copy #}
                <div class="panel__copy">
                  {{ copy }}
                </div>

                {# CTA #}
                {% if cta.url|length %}
                  {% set actionAttributes = {
                    type: 'link', isReversed: false,
                    icon: 'linkType', iconOnly: false,
                    text: cta.text, url: cta.url,
                    linkType: 'url', target: ''
                  } %}

                  {{ actions.action(actionAttributes) }}
                {% endif %}
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
    </div>

    {# Controls #}    
    <ul class="doughnut-chart__controls">
      {% for slice in slices %}
        {% set label = slice.label %}
        {% set color = slice.color %}
        {% set targetSlice = label|kebab %}

        <li class="controls__item">
          <button class="controls__button" style="--slice-color: {{ color }}" data-slice="{{ targetSlice }}">
            {{ label }}
          </button>
        </li>
      {% endfor %}
    </ul>
  </div>

{% endmacro %}