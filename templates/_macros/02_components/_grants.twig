
{% import '_macros/02_components/_card.twig' as cards %}


{% set programAreas = craft.entries().section("programAreasCategories").level(1).all() %}
{% set strategies = craft.entries().section("programAreasCategories").level(2).all() %}
{% set programAreasCategories = craft.entries().section("programAreasCategories").all() %}
{% set awardYear = "now"|date("Y") - 1 %}
{% set layout = layout ?? 'grid' %} {# grid or list or infographic or map #}

{# javscript to rebind after sprig re-render #}
{% js %}
    htmx.on('htmx:afterSwap', function(event) {
        accordionToggle();
        triggerModal();

        
//Browser and OS defined class on body
$('body').addClass($.browser.platform)
$('body').addClass($.browser.name);
if(($.browser.desktop) == true) {
    $('body').removeClass('mobile').removeClass('ipad').addClass('desktop');
}
if(($.browser.mobile) == true) {
    $('body').removeClass('desktop').removeClass('ipad').addClass('mobile');
}
if(($.browser.ipad) == true) {
    $('body').removeClass('mobile').removeClass('desktop').addClass('ipad');
}
if((navigator.platform === 'MacIntel' && navigator.maxTouchPoints > 0) || navigator.platform === 'iPad') {
    $('body').removeClass('mobile').removeClass('desktop').addClass('ipad');
}

// Site related functions

// accordion function start
var accordionButtons = $(".accordion .accordion__title button");

function accordionToggle() {
  $(".accordion .accordion__title button").on("click", function (e) {
    $control = $(this);
    accordionContent = $control.attr("aria-controls");
    checkOthers($control[0]);

    isAriaExp = $control.attr("aria-expanded");
    newAriaExp = isAriaExp == "false" ? "true" : "false";
    $control.attr("aria-expanded", newAriaExp);
    newAriaExp === 'true' ? $(this).parent().addClass('accordion__title--active') : $(this).parent().removeClass("accordion__title--active")

    isAriaHid = $("#" + accordionContent).attr("aria-hidden");
    if (isAriaHid == "true") {
      $("#" + accordionContent).attr("aria-hidden", "false");
      $("#" + accordionContent).slideDown();
    } else {
      $("#" + accordionContent).attr("aria-hidden", "true");
      $("#" + accordionContent).slideUp();
    }

    // Prevent the click event from propagating to the document
    e.stopPropagation();
  });

function checkOthers(elem) {
  for (var i = 0; i < accordionButtons.length; i++) {
    if (accordionButtons[i] != elem) {
      if ($(accordionButtons[i]).attr("aria-expanded") == "true") {
        $(accordionButtons[i]).attr("aria-expanded", "false");
        $(accordionButtons[i]).parent().removeClass('accordion__title--active');
        content = $(accordionButtons[i]).attr("aria-controls");
        $("#" + content).attr("aria-hidden", "true");
        $("#" + content).slideUp();
      }
    }
  }
}

$(document).on("click", function (e) {
    if (!$(e.target).closest('.accordion').length) {
      $(".bf.accordion .accordion__content").slideUp();
      $(".bf.accordion .accordion__title button").attr("aria-expanded", "false").parent().removeClass("accordion__title--active");
      $("#" + accordionContent).attr("aria-hidden", "true");
    }
  });
}

// accordion function end

// modal start
function triggerModal() {
  if ($(".modal__close").length > 0) {
    $(".modal__close").click(function (e) {
      e.preventDefault();
      $(this).closest("dialog")[0].close();
      $('body').css('overflow', 'unset');
    });
  }
  if ($("#applyFilters").length > 0) {
    $("#applyFilters").click(function (e) {
      $(this).closest("dialog")[0].close();
      $('body').css('overflow', 'unset');
    });
  }
  if ($("#clearFilters").length > 0) {
    $("#clearFilters").click(function (e) {
      $(this).closest("dialog")[0].close();
      $('body').css('overflow', 'unset');
    });
  }
  if ($(".modal__open").length > 0) {
    $(".modal__open").on("click", function (e) {
      e.preventDefault();
      $(this).parent().find("dialog")[0].showModal();
      $('body').css('overflow', 'hidden');
    });
  }
  let dialogs = document.querySelectorAll(".modal");
  dialogs.forEach((dialog) => {
    dialog.addEventListener("click", (e) => {
      const dialogDimensions = dialog.getBoundingClientRect();
      if (
        e.clientX < dialogDimensions.left ||
        e.clientX > dialogDimensions.right ||
        e.clientY < dialogDimensions.top ||
        e.clientY > dialogDimensions.bottom
      ) {
        dialog.close();
        $('body').css('overflow', 'unset');
      }
    });
  });
}
// modal end

//Redirect on clear filter
document.getElementById('clearFilters').addEventListener('click', function() {
    // Redirect to /grantmaking/grants-grantees
    window.location.href = '/grantmaking/grants-grantees';
});

// form submit on Enter

$(document).ready(function() {
    $('.section.section--grantee form').on('keypress', function(event) {
        var keycode = (event.keyCode ? event.keyCode : event.which);
        if(keycode == '13') {
            event.preventDefault(); // Prevent form submission
            $('.section.section--grantee form button[type="submit"]').click(); // Trigger click event on the submit button
        }
    });
});

    // Add event listener to Apply filters button
  document.getElementById('applyFilters').addEventListener('click', function() {
    // Initialize an empty array to store selected checkboxes
    var selectedProgramArea = [];
    var selectedStrategy = [];
    // Get all checkboxes with class 'checkbox-group'
    var programAreasFiltered = document.querySelectorAll('.programArea-group');
    var strategyFiltered = document.querySelectorAll('.strategy-group');
    // Loop through each checkbox
    programAreasFiltered.forEach(function(programArea) {
      // If checkbox is checked, add its value to the selectedFilters array
      if (programArea.checked) {
        selectedProgramArea.push(programArea.value);
      }
    });
    strategyFiltered.forEach(function(strategy) {
      // If checkbox is checked, add its value to the selectedFilters array
      if (strategy.checked) {
        selectedStrategy.push(strategy.value);
      }
    });
    // Do whatever you want with the selected filters array here

    {# sprig.load('', {
        filterOption: selectedProgramArea
    }); #}
    // You can send this array to a backend, store it in localStorage, etc.
  });

document.addEventListener('DOMContentLoaded', function() {
    // Get the container of the list items
    var container = document.querySelector('.accordion');

    // Add a click event listener to the container
    container.addEventListener('click', function(event) {
        // Check if a list item was clicked
        if (event.target.tagName.toLowerCase() === 'li') {
            // Get the strategy from the clicked list item
            var strategy = event.target.innerText;

            // Get the program area from the parent accordion item
            var programArea = event.target.closest('.accordion__item').querySelector('.accordion__title span').innerText;

            

            // Redirect the page
            window.location.href = '?query=&programAreaOption=' + encodeURIComponent(programArea) + '&strategyOption=' + encodeURIComponent(strategy) + '&layout=grid&page=1';
        }
    });
});

// Assuming you have a div with id 'loading' for the loading screen
$('#loading').hide(); // Hide it initially


    });
{% endjs %}

{# Initialse twig variables #}
{% set currYear = currYear ?? awardYear %} 
{% set sortOption = sortOption ?? 'Most Recent First' %}
{% set programAreaOption = programAreaOption ?? "" %}
{% set strategyOption = strategyOption ?? "" %}

{% set query = query ?? '' %}
{# {% set granteeList = craft.entries().section('grants').search(query).cache().limit(12) %} #}
{% set granteeListTotal = craft.entries().section('grants').search(query).all() %}

{# Paginates the entry query given the current page #}
    {% set page = page ?? 1 %}
    {{ hiddenInput('page', page) }}

{# Filter section code #}
{# Sets to a default value if not defined #}
{% set optionOfProgramArea = ["and"] %}
{% if programAreaOption|length > 1 %}
    {% set baseEntry =  craft.entries.section("programAreasCategories").title(programAreaOption).one() %} 
    {% set optionOfProgramArea = optionOfProgramArea|merge([{ 'targetElement': baseEntry, 'field': 'tagsProgramAreas' }]) %}
{% endif %}
{% if strategyOption|length > 1 %}
    {% set baseEntry =  craft.entries.section("programAreasCategories").level(2).title(strategyOption).one() %}
    {% set optionOfProgramArea = optionOfProgramArea|merge([{ 'targetElement': baseEntry, 'field': 'tagsStrategies' }]) %}
{% endif %}

{# Loading Screen #}
<div id="loading" style="display: none">Loading..............</div>
<div class="loading-overlay" id="loadingOverlay">
    <div class="loading-spinner"></div>{# Can be modified in _grants.scss #}
</div>

{# Search Sort Filter Section #}
<section class="section section--grantee"> 
      <form sprig s-val:page="{% if granteeListTotal|length <= page * 12 %}1{% else %}{{ page }}{% endif %}" data-hx-indicator="#loadingOverlay">
        <div class="container"> 
          <div class="bg filter"> 
            <div class="filter__top"> </div>
            <h3>Subsection Name Dolor Sit Amet</h3>
            <div class="filter__inputs"> 
              <button sprig-ignore class="filter__button modal__open {% if layout == "directory" %}button-disable{% endif %}" {% if layout == "directory" %}disabled{% endif %}> <span>Add / Modify Filters  </span><span>({{ optionOfProgramArea|length - 1 }} applied)</span></button>
              <div class="bf accordion">
                <div class="accordion__item">
                  <div class="accordion__title">
                    <button type="button" aria-expanded="false" aria-controls="content-1" class="{% if layout == "directory" %}button-disable{% endif %}" {% if layout == "directory" %}disabled{% endif %}> <span>Sort by : </span><span class="cnt">{{ sortOption }}</span></button>
                    <input type="hidden" name="sortOption" value="{{ sortOption }}" />
                  </div><span class="accordion__logo">
                     <svg width="20" height="20" viewBox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                      <path d="M16 5L10 16L4 5L16 5Z" fill="#F5F5F5" fill-opacity="0.65"/>
                      </svg></span>
                  <div class="accordion__content" aria-hidden="true" id="content-1" style="display:none;">
                    <p sprig s-trigger="click" s-val:sortOption="Most Recent First">Most Recent First</p>
                    <p sprig s-trigger="click" s-val:sortOption="Older First">Older First</p>
                  </div>
                </div>
              </div>
              {# <form sprig> #}
                <div class="bf input"> 
                  <div class="input__wrap">
                    <input type="text" name="query" id="name" placeholder=" " aria-labelledby="" value={{ query }}>
                    {# <input type="text" name="query" value="{{ query }}"> #}
                    <label for="name">Search by Keyword(s)</label>
                    <button aria-label="search button" type="submit">
                      search button
                      <svg width="20" height="20" viewbox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M9 14C11.7614 14 14 11.7614 14 9C14 6.23858 11.7614 4 9 4C6.23858 4 4 6.23858 4 9C4 11.7614 6.23858 14 9 14ZM14.4779 13.3584C15.4306 12.1626 16 10.6478 16 9C16 5.13401 12.866 2 9 2C5.13401 2 2 5.13401 2 9C2 12.866 5.13401 16 9 16C10.6478 16 12.1626 15.4306 13.3584 14.4779L16 18H18V16L14.4779 13.3584Z" fill="#015750"></path>
                      </svg>
                    </button>
                  </div>
                  <div class="field-error">Please fill out this field.  </div>
                </div>
                <div>
                  <dialog sprig-ignore class="modal" style="--modal-bg:#262053">
                    <div class="modal__header">
                      <h3>Add/Modify Filters</h3>
                      <p> <i>Select all that apply</i></p>
                      <button class="modal__close"> 
                        <svg width="16" height="16" viewbox="0 0 16 16" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M6.58586 8.00008L0.292969 14.293L1.70718 15.7072L8.00007 9.41429L14.293 15.7072L15.7072 14.293L9.41429 8.00008L15.7072 1.70718L14.293 0.292969L8.00007 6.58587L1.70718 0.292975L0.292969 1.70719L6.58586 8.00008Z" fill="#F5F5F5" fill-opacity="0.65"></path>
                        </svg>
                      </button>
                    </div>
                    <div class="modal__cnt"> 
                    <div class="modal__year-filter"> 
                        <ul role="list">
                          {% set initialYear = 2018 %}
                          {% set finalYear = 2024 %}
                          {% set year = initialYear %}
                          {% for year in range(initialYear, finalYear) %}
                              <li class="modal__year" role="listitem">
                                  <div class="bf input-wrapper">
                                      <div class="radio-button radio-button--check">
                                          <label for="{{ year }}">
                                              <input class="radio-group" type="radio" id="{{ year }}" value="{{ year }}" name="currYear" {{ currYear == year ? 'checked' : '' }}><span class="radio-checkmark"></span><span class="radio-label">{{ year }}</span>
                                          </label>
                                      </div>
                                  </div>
                              </li>
                          {% endfor %}
                        </ul>
                      </div>
                      <ul class="accordion accordion--4col" role="list">
                        <li class="accordion__item" role="listitem">
                          <div class="accordion__title">
                            <button type="button" aria-expanded="false" aria-controls="Category-1">Program Areas</button>
                          </div>
                          <div class="accordion__content" aria-hidden="true" id="Category-1">
                            {% for category in programAreas %}
                                <div class="bf input-wrapper">
                                  <div class="radio-button radio-button--check">
                                    <label for="{{ category.title }}"> 
                                      <input class="radio-group programArea-group" type="radio" id="{{ category.title }}" value="{{ category.title }}" name="programAreaOption" {{ category.title in programAreaOption ? 'checked' : '' }} ><span class="radio-checkmark"></span><span class="radio-label">{{ category.title }}</span>
                                    </label>
                                  </div>
                                </div>
                            {% endfor %}
                          </div>
                        </li>
                        <li class="accordion__item accordion__item--large" role="listitem">
                          <div class="accordion__title">
                            <button type="button" aria-expanded="false" aria-controls="Category-2">Strategies</button>
                          </div>
                          <div class="accordion__content" aria-hidden="true" id="Category-2">
                            {% for category in strategies %}
                              <div class="bf input-wrapper">
                                <div class="radio-button radio-button--check">
                                  <label for="{{ category.title }}"> 
                                    <input class="radio-group strategy-group" type="radio" value="{{ category.title }}" id="{{ category.title }}" name="strategyOption" {{ category.title in strategyOption ? 'checked' : '' }}><span class="radio-checkmark"></span><span class="radio-label">{{ category.title }}</span>
                                  </label>
                                </div>
                              </div>
                            {% endfor %}
                          </div>
                        </li>
                      </ul>
                    </div>
                    <div class="modal__footer"> 
                      <button class="l-button" id="applyFilters"> Apply filters</button>
                      <button class="l-link" id="clearFilters"> clear all</button>
                    </div>
                  </dialog>
                </div>
              </div>
            <div class="filter__bottom"> </div>
            <h4>view as </h4>
            <div class="filter__radios"> 
              <div class="bf input-wrapper">
                <div class="radio-button">
                  <label for="grid"> 
                    <input sprig s-trigger="change" type="radio" name="layout" value="grid" id="grid" s-val="layout" {% if layout == "grid" %}checked="checked"{% endif %}><span class="radio-checkmark"></span><span class="radio-label">Grid</span>
                  </label>
                </div>
              </div>
              <div class="bf input-wrapper">
                <div class="radio-button">
                  <label for="list"> 
                    <input sprig s-trigger="change"  type="radio" name="layout" value="list" id="list" s-val="layout" {% if layout == "list" %}checked="checked"{% endif %}><span class="radio-checkmark"></span><span class="radio-label">List</span>
                  </label>
                </div>
              </div>
              <div class="bf input-wrapper">
                <div class="radio-button">
                  <label for="infographic"> 
                    <input sprig s-trigger="change"  type="radio" name="layout" value="infographic" id="infographic" s-val="layout" {% if layout == "infographic" %}checked="checked"{% endif %}><span class="radio-checkmark"></span><span class="radio-label">Infographic</span>
                  </label>
                </div>
              </div>
              <div class="bf input-wrapper">
                <div class="radio-button">
                  <label for="directory"> 
                    <input sprig s-trigger="change"  type="radio" name="layout" value="directory" id="directory" s-val="layout" {% if layout == "directory" %}checked="checked"{% endif %}><span class="radio-checkmark"></span><span class="radio-label">Grantee Directory</span>
                  </label>
                </div>
              </div>
            </div>
          </div>
        </div>
      </form>
</section>

{# Fetch data based on sort option #}
{% set currYear1 = currYear + 1 %}
{% if layout == "grid" or layout == "list" %}
  {% set baseQuery = craft.entries()
            .section({
                section: "grants",
            })
            .dateOnly(["and", ">= " ~ currYear, "<" ~ currYear1 ])
            .entriesOrganization([':notempty:'])
            .search(query) %}
  {% if sortOption == 'Most Recent First' %}
      {% if optionOfProgramArea|json_encode|length > 7 %}
        {% set granteeList = baseQuery
            .orderBy("dateOnly DESC")
            .limit(12)
            .relatedTo(optionOfProgramArea) %}
      {% else %}
        {% set granteeList = baseQuery
          .orderBy("dateOnly DESC")
          .limit(12) %}
      {% endif %}
  {% elseif sortOption == 'Older First' %}
      {% if optionOfProgramArea|json_encode|length > 7 %}
        {% set granteeList = baseQuery
            .orderBy("dateOnly ASC")
            .limit(12)
            .relatedTo(optionOfProgramArea) %}
      {% else %}
        {% set granteeList = baseQuery
          .orderBy("dateOnly ASC")
          .limit(12) %}
      {% endif %}
  {% else %}
      {% set granteeList = baseQuery.orderBy("dateOnly DESC").limit(12) %}
  {% endif %}
{% endif %}

{# code rendered for directory layout #}
{% if layout == "directory" %}

    {# Grants entries query #}
    {% set grants = craft.entries().section('grants') %}
    {# Set empty grantsIds array #}
    {% set grantsIds = [] %}

    {# Loop grants from query #}
    {% for grant in grants %}
      {# Merge grant id into grantsIds array #}
      {% set grantsIds = grantsIds|merge([grant.id]) %}
    {% endfor %}

    {# Grantees entries query related to grants #}
    {% set granteeList = craft.entries().section('grantees').relatedTo({
    sourceElement: grants
  }).search(query).orderBy("title asc").limit(12) %}

{% endif %}

{% if layout == "grid" or layout == "list" or layout == "directory" %}
  {% set pageInfo = sprig.paginate(granteeList, page) %}
      {% set pageEntries = pageInfo.pageResults %}
  {% set end = pageInfo.totalPages %}

  {# Grid, List and directory view Section #}
  <section id="grantData" class="section section--grantee section--granteecards"> 
          <div class="container">
            <div class="bf grantee grantee--{% if layout == "directory" %}list{% else %}{{ layout }}{% endif %}"> 
            {% set i = 1 %}
              {% if pageEntries|length %}
                {% for grants in pageEntries %}
                      {% set tagValue = "" %}
                      {% if layout != "directory" %}
                        {% set tagValue = "Special Initiatives" %}
                        {% for tag in grants.tagsProgramAreas.all() %}
                                  {% set tagValue = tag %}
                        {% endfor %}
                      {% endif %}
                      <article class="bf grantee-card" style="--var-grantee-color:{% if tagValue == "Special Initiatives" %}#01564F{% elseif tagValue == "Sector Effectiveness" %}#01564F{% elseif tagValue == "Arts & Creativity" %}#2F5535{% elseif tagValue == "Education" %}#E78B23{% elseif tagValue == "Climate" %}#5A3044{% else %}#5A3044{% endif %}">

                        {# <h3>{{ grants.title }}</h3> #}
                        {# {{ grants.entriesOrganization }} #}
                        {% if layout != "directory" %}
                        <h3>{% if grants.entriesOrganization.count() > 0 %}
                              {{grants.entriesOrganization[0]}}
                          {% else %}
                            {{ grants.title }}
                          {% endif %}</h3>
                          <div class="grantee-card__cnt">{{ grants.textDescription }}</div>
                          <div class="grantee-card__table"> 
                            <div class="grantee-card__row"> 
                              <h4>Fiscal Sponsor</h4>
                              <div class="grantee-card__value">{% if grants.textName %}{{ grants.textName }}{% else %}
                                N/A {% endif %}</div>
                            </div>
                            <div class="grantee-card__row"> 
                              <h4>Award Date</h4>
                              <div class="grantee-card__value">{{ grants.dateOnly|date("m/d/Y") }}</div>
                            </div>
                            <div class="grantee-card__row"> 
                              <h4>Amount</h4>
                              <div class="grantee-card__value">{{ grants.textAmount }}</div>
                            </div>
                            <div class="grantee-card__row"> 
                              <h4>Term</h4>
                              <div class="grantee-card__value">{% if grants.textTerm %}
                              {{ grants.textTerm }}{% if 'mos' not in grants.textTerm or 'month' not in grants.textTerm %} mos{% endif %}{% else %}
                              N/A {% endif %}</div>
                            </div>
                            <div class="grantee-card__row grantee-card__row--rev">
                              <h4>Program(s)</h4>
                              <ul class="grantee-card__tag" role="list">
                                {% for tag in grants.tagsProgramAreas.all() %}
                                  <li role="listitem">{{ tag }}</li>
                                {% endfor %}
                              </ul>
                            </div>
                            <div class="grantee-card__row grantee-card__row--rev">
                              <h4>Strategies</h4>
                              <ul class="grantee-card__tag" role="list">
                                {% for tags in grants.tagsStrategies.all() %}
                                  <li role="listitem">{{ tags }}</li>
                                {% endfor %}
                              </ul>
                            </div>
                          </div>
                        {% else %}
                          <h3>{{ grants.title }}</h3>
                        {% endif %}
                        {% set linkValue = "/#" %}
                        {% if layout != "directory" %}
                          {% if grants.entriesOrganization.count() > 0 %}
                            {% set organizationData = grants.entriesOrganization[0].contactWebsite %}

                            {% if "linkValue" in organizationData %}

                                  {% set organizationWebsite = organizationData | json_decode %} 
                                    {% if organizationWebsite %}
                                      {% set linkValue = organizationWebsite[0]['linkValue'] %}
                                    {% endif %} 
                            {% else %}
                                  {% set linkValue = organizationData %}
                            {% endif %}
                              {# {% set organizationWebsite = organizationData | json_decode %}  #}
                              {# {% if organizationWebsite %}
                                {% set linkValue = organizationWebsite[0]['linkValue'] %}
                              {% endif %}  #}
                          {# {% endif %} #}
                          
                                <div class="grantee-card__footer"> <a href="/{% if grants.entriesOrganization.count() > 0 %}{{ grants.entriesOrganization[0].uri }}{% endif %}" title="Go to Grantee Name Lorem Ipsum"> <span>profile </span></a>
                                {% if grants.entriesOrganization.count() > 0 %}
                                  <a target="_blank" href="{% if "https://" in linkValue or "http://" in linkValue or  "https//" in linkValue %}{{ linkValue }}{% else %}https://{{ linkValue }}{% endif %}" title="Go to {{ linkValue }}"> <span>website</span><span class="grantee-card__footer-logo"> 
                                  <svg width="20" height="20" viewbox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path fill-rule="evenodd" clip-rule="evenodd" d="M19 1L8.99995 2L12.7928 5.79289L6.29285 12.2929L7.70706 13.7071L14.2071 7.20711L18 11L19 1ZM0 18V8V6H2H7V8H2V18H12V13H14V18V20H12H2H0V18Z"></path>
                                  </svg></span></a>
                                {% endif %}
                            {% endif %}
                          </div>
                        {% else %}
                          {% if "linkValue" in grants.contactWebsite %}
                            {% set organizationWebsite = grants.contactWebsite | json_decode %}
                            {% if organizationWebsite %} 
                              {% set linkValue = organizationWebsite[0]['linkValue'] %}
                            {% endif %}
                          {% else %}
                            {% set linkValue = grants.contactWebsite %} 
                          {% endif %}
                          <div class="grantee-card__footer"> <a href="/{% if grants.url %}{{ grants.url }}{% endif %}" title="Go to Grantee Name Lorem Ipsum"> <span>profile </span></a>
                              {% if linkValue  %}
                                <a target="_blank" href="{% if "https://" in linkValue or "http://" in linkValue or  "https//" in linkValue %}{{ linkValue }}{% else %}https://{{ linkValue }}{% endif %}" title="Go to {{ linkValue }}"> <span>website</span><span class="grantee-card__footer-logo"> 
                                <svg width="20" height="20" viewbox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                                  <path fill-rule="evenodd" clip-rule="evenodd" d="M19 1L8.99995 2L12.7928 5.79289L6.29285 12.2929L7.70706 13.7071L14.2071 7.20711L18 11L19 1ZM0 18V8V6H2H7V8H2V18H12V13H14V18V20H12H2H0V18Z"></path>
                                </svg></span></a>
                              {% endif %}
                          </div>
                        {% endif %}
                      </article>
                {% endfor %}
              {% else %}
                <h2 class="grant-error">No results found</h2>
              {% endif %}
            </div>
            <div class="pagination-section">
                <div class="pagination__btn">
                  <a
                    sprig
                    s-val:page="1"
                    class=""
                    href="#grantData">
                    <svg width="37" height="36" viewBox="0 0 37 36" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_5409_34471)">
                    <path fill-rule="evenodd" clip-rule="evenodd" d="M21.5 24L10.5 18L21.5 12L21.5 17L28.5 17L28.5 19L21.5 19L21.5 24ZM10.5 18L10.5 24L8.5 24L8.5 12L10.5 12L10.5 18Z" fill="#015750"/>
                    </g>
                    <defs>
                    <clipPath id="clip0_5409_34471">
                    <rect width="20" height="20" fill="white" transform="translate(8.5 8)"/>
                    </clipPath>
                    </defs>
                    </svg>
                  </a>
                  {% if pageInfo.prevUrl %}<a
                    sprig
                    s-val:page="{{ page -1 }}"
                    class="" 
                    href="#grantData">
                    <svg width="37" height="36" viewBox="0 0 37 36" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_5409_34477)">
                      <path fill-rule="evenodd" clip-rule="evenodd" d="M8.5 18L19.5 24L19.5 19L28.5 19L28.5 17L19.5 17L19.5 12L8.5 18Z" fill="#015750"/>
                      </g>
                      <defs>
                      <clipPath id="clip0_5409_34477">
                      <rect width="20" height="20" fill="white" transform="translate(8.5 8)"/>
                      </clipPath>
                      </defs>
                    </svg>
                  </a>{% endif %}
                </div>
                {% if end <= 10 %}
                  {% for page, url in pageInfo.getRangeUrls(1 , end) %}
                        {% if page == pageInfo.currentPage %}
                            <span class="current">{{ pageInfo.currentPage }}</span>
                        {% else %}
                            <a   sprig
                          s-val:page="{{ page }}" href="#grantData">{{ page }}</a>
                        {% endif %}   
                    {% endfor %}

                {% else %}
                
                    {% if pageInfo.currentPage > 4 %}
                        {% for page, url in pageInfo.getRangeUrls(1 , 3) %}
                            {% if page == pageInfo.currentPage %}
                                <span class="current">{{ pageInfo.currentPage }}</span>
                            {% else %}
                                <a   sprig
                              s-val:page="{{ page }}" href="#grantData">{{ page }}</a>
                            {% endif %}   
                        {% endfor %}
                    {% else %}
                        {% for page, url in pageInfo.getRangeUrls(1 , 5) %}
                            {% if page == pageInfo.currentPage %}
                                <span class="current">{{ pageInfo.currentPage }}</span>
                            {% else %}
                                <a   sprig
                              s-val:page="{{ page }}" href="#grantData">{{ page }}</a>
                            {% endif %}   
                        {% endfor %}
                    {% endif %}

                    {% if pageInfo.currentPage > 4 and pageInfo.currentPage < end - 3 %}
                      {% if pageInfo.currentPage != 5 %}<span> . . . </span>{% endif %}
                      <a  sprig
                                s-val:page="{{ pageInfo.currentPage - 1 }}" href="#grantData">{{ pageInfo.currentPage - 1 }}</a>
                      <span class="current">{{ pageInfo.currentPage }}</span>
                      <a  sprig
                                s-val:page="{{ pageInfo.currentPage + 1 }}" href="#grantData">{{ pageInfo.currentPage + 1 }}</a>
                      {% if pageInfo.currentPage != end - 4 %}<span> . . . </span>{% endif %}
                      {% else %}
                      <span> . . . </span>
                      {% endif %}
                      {# <span class="current">{{ pageInfo.currentPage }}</span> #}
                      {% if pageInfo.currentPage < end - 3 %}
                          {% for page, url in pageInfo.getRangeUrls(end - 2 , end) %}
                              {% if page == pageInfo.currentPage %}
                                  <span class="current">{{ pageInfo.currentPage }}</span>
                              {% else %}
                                  <a  sprig
                                s-val:page="{{ page }}" href="#grantData">{{ page }}</a>
                              {% endif %}   
                          {% endfor %}
                      {% else %}
                          {% for page, url in pageInfo.getRangeUrls(end - 5 , end) %}
                              {% if page == pageInfo.currentPage %}
                                  <span class="current">{{ pageInfo.currentPage }}</span>
                              {% else %}
                                  <a  sprig
                                s-val:page="{{ page }}" href="#grantData">{{ page }}</a>
                              {% endif %}   
                          {% endfor %}
                      {% endif %}
                  {% endif %}
                  <div class="pagination__btn">
                    {% if pageInfo.nextUrl %}<a
                      sprig
                      s-val:page="{{ page + 1 }}"
                      class=""
                      href="#grantData">
                      <svg width="37" height="36" viewBox="0 0 37 36" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_5409_34495)">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M28.5 18L17.5 12V17H8.5V19H17.5V24L28.5 18Z" fill="#015750"/>
                        </g>
                        <defs>
                        <clipPath id="clip0_5409_34495">
                        <rect width="20" height="20" fill="white" transform="translate(8.5 8)"/>
                        </clipPath>
                        </defs>
                      </svg>
                    </a>{% endif %}
                    <a
                      sprig
                      s-val:page="{{ pageInfo.last }}"
                      class=""
                      href="#grantData">
                      <svg width="37" height="36" viewBox="0 0 37 36" fill="none" xmlns="http://www.w3.org/2000/svg"><g clip-path="url(#clip0_5409_34500)">
                        <path fill-rule="evenodd" clip-rule="evenodd" d="M15.5 12L26.5 18L15.5 24V19H8.5V17H15.5V12ZM26.5 18V12H28.5V24H26.5V18Z" fill="#015750"/>
                        </g>
                        <defs>
                        <clipPath id="clip0_5409_34500">
                        <rect width="20" height="20" fill="white" transform="translate(8.5 8)"/>
                        </clipPath>
                        </defs>
                      </svg>
                    </a>
                  </div>
              </div>
          </div>
  </section>
{# Infographic Section #}
{% elseif layout == "infographic" %}
  <section class="section section--infographic section--granteecards"> 
        <div class="container">
          <div class="bf grantee-infographic"> 
            <div class="grantee-infographic__cnt"> 
              <div class="accordion">
              {% for areas in programAreas %}
                <div class="accordion__item" style="--accordion-color:{% if areas == "Special Initiatives" %}#01564F{% elseif areas == "Sector Effectiveness" %}#01564F{% elseif areas == "Arts & Creativity" %}#2F5535{% elseif areas == "Education" %}#E78B23{% elseif areas == "Climate" %}#5A3044{% endif %}">
                  <div class="accordion__title">
                    <button type="button" aria-expanded="false" aria-controls="content-{{ loop.index + 1 }}"><span>{{ areas }}</span><span class="accordion__logo"> 
                        <svg width="20" height="20" viewbox="0 0 20 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                          <path fill-rule="evenodd" clip-rule="evenodd" d="M11 0H9V9H0V11H9V20H11V11H20V9H11V0Z" fill="#2F5535"></path>
                        </svg></span></button>
                  </div>
                  <div class="accordion__content" aria-hidden="true" id="content-{{ loop.index + 1 }}">
                    <ul>
                      {% for item in programAreasCategories %}
                        {% if item.level == 2 and item.parent == areas.title %}
                            <li><a href="?query=&programAreaOption={{ areas|url_encode }}&strategyOption={{ item|url_encode }}&layout=list&page=1">{{ item }}</a></li>
                        {% endif %}
                      {% endfor %}
                    </ul>
                  </div>
                </div> 
              {% endfor %}
              </div>
            </div>
            <div id="treemap"></div>
          </div>
        </div>
  </section>
{% endif %}

<script>
{# script for infographic treemap #}
{% if layout == "infographic" %}
  //call the function 

  //Plotly javascript 
	treemap = document.getElementById('treemap');
  {% cache %}
      {% set entriesQuery = craft.entries().section('grants') %}
      {% set allData = entriesQuery.with(['splitGrantDetails','dateOnly']).dateOnly(["and", ">= #{awardYear}"]).entriesOrganization([':notempty:']).all() %}
    {# structuring parent and children for plotly treemap #}
    {% set programAreaArray = [] %}
    {% set StrategiesArray = [] %}
    {% set colorsArray = [] %}
    {% for programArea in programAreas %}
        {% set StrategiesArray = StrategiesArray|merge([programArea.title]) %}
        {% set programAreaArray = programAreaArray|merge(["Program Area"]) %}
        {% if programArea.title == "Special Initiatives" %}{% set color = "#01564F" %}{% elseif programArea.title == "Sector Effectiveness" %}{% set color = "#01564F" %}{% elseif programArea.title == "Arts & Creativity" %}{% set color = "#2F5535" %}{% elseif programArea.title == "Education" %}{% set color = "#E78B23" %}{% elseif programArea.title == "Climate" %}{% set color = "#5A3044" %}{% else %}{% set color = "#5A3044" %}{% endif %}
        {% set colorsArray = colorsArray|merge([color]) %}
    {% endfor %}
    {% for strat in strategies %}
        {% set StrategiesArray = StrategiesArray|merge([strat.title]) %}
        {% set programAreaArray = programAreaArray|merge([strat.parent.title]) %}
        {% if strat.parent.title == "Special Initiatives" %}{% set color = "#01564F" %}{% elseif strat.parent.title == "Sector Effectiveness" %}{% set color = "#01564F" %}{% elseif strat.parent.title == "Arts & Creativity" %}{% set color = "#2F5535" %}{% elseif strat.parent.title == "Education" %}{% set color = "#E78B23" %}{% elseif strat.parent.title == "Climate" %}{% set color = "#5A3044" %}{% else %}{% set color = "#5A3044" %}{% endif %}
        {% set colorsArray = colorsArray|merge([color]) %}
    {% endfor %}
    var programAreaArray=["Program Areas",...{{ programAreaArray|json_encode|raw }}];
    var StrategiesArray=["",...{{ StrategiesArray|json_encode|raw }}];
    var colorsArray=["#FFFFFF",...{{ colorsArray|json_encode|raw }}];
    {% set amountValues = [] %}

    {% for count in range(1,StrategiesArray|length) %}
      {% set amountValues = amountValues|merge([0]) %}
    {% endfor %}

    {% set temp = [] %}
    {% set temp0 = [] %}

    {% for key , value in amountValues %}
      {% set temp= temp|merge({(key~'_'):value}) %}
    {% endfor %}

    var amountValues = [...{{ amountValues|json_encode|raw }}];

    var currentValue = 0;

    var updatedValue = 0;

    {% for entry in allData %}
        {% for splitGrantDetail in entry.splitGrantDetails %}
            {% set tagsProgramAreasFirst = splitGrantDetail.tagsProgramAreas|first %}
            {% set tagsStrategiesFirst = splitGrantDetail.tagsStrategies|first %}
          
            {% for count in range(1, StrategiesArray|length) %}
                {% set currentIndex = loop.index0 %}
                {% if StrategiesArray[currentIndex] in [tagsProgramAreasFirst, tagsStrategiesFirst] %}
                    {% set currentValue = temp[currentIndex~"_"] ?? 0 %}
                    {% set updatedValue = currentValue + splitGrantDetail.numberAmount %}
                    {% set temp = temp|merge({(currentIndex~"_"): updatedValue}) %}
                {% endif %}
            {% endfor %}
        {% endfor %}
    {% endfor %}

    {% for key , value in temp %}
      {% set temp0= temp0|merge({(loop.index0):value}) %}
    {% endfor %}
      {% set amountValues = [] %}
      {% set amountValues = amountValues|merge(temp0) %}

    amountValues = [1,...{{ amountValues|json_encode|raw }}];
  {% endcache %}

    //Plotly graph builder
    data = [{
        type: "treemap",
        labels: StrategiesArray,
        parents: programAreaArray,
        branchvalues: "total",
        values: amountValues,
        maxdepth: 2,
        tiling: {pad: 0},
        textinfo: 'label+percent parent+text',
        texttemplate: '%{label}<br><span style="font-size: 15px">%{percentParent:.1%}</span>',
        textfont: { "size": 20, "overflow": "clip" },
        hovertemplate: '<b>%{label}</b><br>' +
                    'Value: $%{value}<br>' +
                    'Percentage: %{percentParent:.1%} <extra></extra> ',
        pathbar: {"textfont": {"size": 20 } },
        outsidetextfont: {"size": 20, "color": "#377eb8","family": "Axiforma" , "minsize": 20, "overflow": "clip"},
        insidetextfont: {"size": 20,"color": "#FFFFFF","family": "Axiforma" ,"minsize": 20, "overflow": "clip" },
        marker: {"line": {"width": 2},"colors": colorsArray},
        hoverinfo: "none"
  }];

  var layout = {
      margin: { t: 25, l: 0, r: 0, b: 0 },
      autosize: true, // Enable autosize to make the plot responsive
      // Set the maximum height and width
      maxheight: 600,
      maxwidth: 600,
      paper_bgcolor: '#f5f5f5',
      uniformtext: {
          minsize: 20,
      },
      // You can also include other layout properties here if needed
  };

  var config = {
      responsive: true,
      displayModeBar: true,
      showLink: false,
      displaylogo: false,
      modeBarButtonsToRemove: ['toImage', 'sendDataToCloud','pan2d','lasso2d'],
  };

  Plotly.newPlot(treemap, data, layout, config);
      //Redirection to list page when startegy is clicked
      // Add event listener for click events on the plot
      treemap.on('plotly_click', function(data){
          // Get the clicked point
          var point = data.points[0];

          // Check if the clicked treemap node is of depth 3
          if (point.currentPath.length > 13 ) { // Change 3 to the appropriate depth
              // Log the values of the first and second depth

              var loader = document.getElementById("loadingOverlay");
              if(loader){
                  loader.classList.add("htmx-request");
              } else {
              }
              
              // Redirect to the desired URL
              window.location.href = "?query=&programAreaOption=" + encodeURIComponent(point.parent) + "&strategyOption=" + encodeURIComponent(point.label) + "&layout=list&page=1";
          }
      });
{% endif %}

</script>


<script>
    {% cache %}
      document.getElementById('clearFilters').addEventListener('click', function (e) {
          e.preventDefault();
          // Clear all selected program area inputs
          var programAreaInputs = document.querySelectorAll('.radio-group.programArea-group');
          programAreaInputs.forEach(function(programAreaInput) {
              programAreaInput.checked = false;
          });
          // Clear all selected strategy inputs
          var strategyInputs = document.querySelectorAll('.radio-group.strategy-group');
          strategyInputs.forEach(function(strategyInput) {
              strategyInput.checked = false;
          });
      });


      {% for category in strategies %}
          var radioInputs{{ loop.index }} = document.querySelectorAll('.radio-group.programArea-group');
          radioInputs{{ loop.index }}.forEach(function(input) {
              input.addEventListener('click', function () {
                  var strategiesInputs = document.querySelectorAll('.radio-group.strategy-group');
                  strategiesInputs.forEach(function(strategyInput) {
                      strategyInput.checked = false;
                  });
                  var parentInputWrapper = document.getElementById('{{ category.title|raw }}').closest('.input-wrapper');
                  if (document.getElementById('{{ category.parent|raw }}').checked) {
                      parentInputWrapper.classList.remove("input--disabled");
                  } else {
                      parentInputWrapper.classList.add("input--disabled");
                  }
              });
          });
          var filterButton = document.querySelector('.filter__button');
            filterButton.addEventListener('click', function () {

                // Check if any radio input in .radio-group.programArea-group is checked
                var programAreaInputs = document.querySelectorAll('.radio-group.programArea-group');
                var isAnyProgramAreaChecked = Array.from(programAreaInputs).some(function(input) {
                    return input.checked;
                });

                if (isAnyProgramAreaChecked) {
                    // Execute your logic here
                    var parentInputWrapper = document.getElementById('{{ category.title|raw }}').closest('.input-wrapper');
                    if (document.getElementById('{{ category.parent|raw }}').checked) {
                        parentInputWrapper.classList.remove("input--disabled");
                    } else {
                        parentInputWrapper.classList.add("input--disabled");
                    }
                }
            });

      {% endfor %}
    {% endcache %}
</script>